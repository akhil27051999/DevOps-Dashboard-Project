version: '3.8'

services:

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    networks:
      - backend-net

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - frontend-net

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - frontend-net
      - backend-net

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: dashboard_user
      POSTGRES_PASSWORD: dashboard_pass
      POSTGRES_DB: dashboard_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - log-net

  logstash:
    build: ./logstash
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - log-net

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitor-net

volumes:
  db_data:
  grafana_data:

networks:
  backend-net:
  frontend-net:
  monitor-net:
  log-net:
